{"version":3,"sources":["pages/Home/Home.tsx","pages/Board/components/Card/Card.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","pages/Error/Error.tsx","Rroat.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["data","id","title","BoardLink","props","arr","colors","randomC","Math","floor","random","length","className","style","background","Home","useState","boards","map","board","Card","List","cards","card","Board","lists","href","list","Error","Rroat","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAIMA,EACI,CACN,CAAEC,GAAI,EAAGC,MAAO,8CAChB,CAAED,GAAI,EAAGC,MAAO,kHAChB,CAAED,GAAI,EAAGC,MAAO,kKAChB,CAAED,GAAI,EAAGC,MAAO,qKAmBdC,EAAY,SAACC,GACjB,IACmBC,EADbC,EAAS,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UAK9DC,EAAO,WAAOD,GAJCD,EAIkBC,EAHtBE,KAAKC,MAAMD,KAAKE,SAAWL,EAAIM,WAK9C,OACE,qBAAKC,UAAU,aAAaC,MAAO,CAAEC,WAAYP,GAAjD,SACE,6BAAKH,EAAMF,WAIFa,EA9BF,WACX,MAA4BC,mBAAShB,GAArC,mBAAOiB,EAAP,UAEA,OACE,0BAASL,UAAU,iBAAnB,UACE,oBAAIA,UAAU,cAAd,uBACA,sBAAKA,UAAU,mBAAf,UACGK,EAAOC,KAAI,SAACC,GACX,IAAQlB,EAAckB,EAAdlB,GAAIC,EAAUiB,EAAVjB,MACZ,OAAO,cAAC,EAAD,CAAWD,GAAIA,EAAIC,MAAOA,OAEnC,wBAAQU,UAAU,4BAAlB,kC,QCZOQ,EARF,SAAC,GAAsB,IAApBlB,EAAmB,EAAnBA,MACd,OACE,qBAAKU,UAAU,OAAf,SACE,oBAAIA,UAAU,aAAd,SAA4BV,OCCnB,SAASmB,EAAKjB,GAC3B,IAAQF,EAAiBE,EAAjBF,MAAOoB,EAAUlB,EAAVkB,MACf,OACE,sBAAKV,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BV,IAC7B,8BACGoB,EAAMJ,KAAI,SAACK,GAAD,OACT,cAAC,EAAD,CAAMtB,GAAIsB,EAAKtB,GAAIC,MAAOqB,EAAKrB,aAGnC,wBAAQU,UAAU,qBAAlB,6B,UCXAZ,EACG,qGADHA,EAEG,CACL,CACEC,GAAI,EACJC,MAAO,iCACPoB,MAAO,CACL,CAAErB,GAAI,EAAGC,MAAO,iEAChB,CAAED,GAAI,EAAGC,MAAO,yFAChB,CAAED,GAAI,EAAGC,MAAO,kGAGpB,CACED,GAAI,EACJC,MAAO,0DACPoB,MAAO,CAAC,CAAErB,GAAI,EAAGC,MAAO,uGAE1B,CACED,GAAI,EACJC,MAAO,6CACPoB,MAAO,CACL,CAAErB,GAAI,EAAGC,MAAO,yFAChB,CAAED,GAAI,EAAGC,MAAO,yGA8BTsB,EAxBD,WACZ,IAAQtB,EAAiBF,EAAVyB,EAAUzB,EAEzB,OACE,qCACE,sBAAKY,UAAU,OAAf,UACE,sBACA,oBAAGc,KAAK,gBAAR,UACE,cAAC,IAAD,CAAad,UAAU,eADzB,aAIF,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BV,IAC9B,qBAAKU,UAAU,cAAf,SACGa,EAAMP,KAAI,SAACS,GAAD,OACT,cAACN,EAAD,CAAoBnB,MAAOyB,EAAKzB,MAAOoB,MAAOK,EAAKL,OAAxCK,EAAK1B,SAGpB,wBAAQW,UAAU,qBAAlB,iCC1COgB,EARD,WACZ,OACE,8BACE,+CCmBSC,MAlBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,MCLKC,MARf,WACE,OACE,sBAAMpB,UAAU,YAAhB,SACE,cAAC,EAAD,OCMSqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5df6aea0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { IBoardLink } from '../../common/interfaces/IBoardLink';\r\nimport Board from '../Board/Board';\r\n\r\nconst data = {\r\n  boards: [\r\n    { id: 1, title: 'покупки' },\r\n    { id: 2, title: 'подготовка к свадьбе' },\r\n    { id: 3, title: 'разработка интернет-магазина' },\r\n    { id: 4, title: 'курс по продвижению в соцсетях' },\r\n  ],\r\n};\r\nconst Home = () => {\r\n  const [boards, setBoards] = useState(data.boards);\r\n\r\n  return (\r\n    <section className=\"container home\">\r\n      <h1 className=\"home__title\">My Boards</h1>\r\n      <div className=\"boards-container\">\r\n        {boards.map((board) => {\r\n          const { id, title } = board;\r\n          return <BoardLink id={id} title={title} />;\r\n        })}\r\n        <button className=\"board-link board__btn-add\">Add new board</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nconst BoardLink = (props: IBoardLink) => {\r\n  const colors = ['f94144', 'f3722c', '43aa8b', '90be6d', 'f8961e', '577590'];\r\n  let randomColor = (arr: string[]) => {\r\n    let random = Math.floor(Math.random() * arr.length);\r\n    return random;\r\n  };\r\n  let randomC = `#${colors[randomColor(colors)]}`;\r\n\r\n  return (\r\n    <div className=\"board-link\" style={{ background: randomC }}>\r\n      <h4>{props.title}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport { ICard } from '../../../../common/interfaces/ICard';\r\n\r\nconst Card = ({ title }: ICard) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <li className=\"card__item\">{title}</li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { ICard } from '../../../../common/interfaces/ICard';\r\nimport Card from '../Card/Card';\r\ninterface ListProps {\r\n  title: string;\r\n  cards: ICard[];\r\n}\r\nexport default function List(props: ListProps) {\r\n  const { title, cards } = props;\r\n  return (\r\n    <div className=\"list\">\r\n      <h2 className=\"list__title\">{title}</h2>\r\n      <div>\r\n        {cards.map((card) => (\r\n          <Card id={card.id} title={card.title} />\r\n        ))}\r\n      </div>\r\n      <button className=\"btn card__btn--add\">Add new card</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { GoArrowLeft } from 'react-icons/go';\r\n\r\nimport List from './components/List/List';\r\nimport './Board.css';\r\n\r\nconst data = {\r\n  title: 'Моя тестовая доска',\r\n  lists: [\r\n    {\r\n      id: 1,\r\n      title: 'Планы',\r\n      cards: [\r\n        { id: 1, title: 'помыть кота' },\r\n        { id: 2, title: 'приготовить суп' },\r\n        { id: 3, title: 'сходить в магазин' },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'В процессе',\r\n      cards: [{ id: 4, title: 'посмотреть сериал' }],\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Сделано',\r\n      cards: [\r\n        { id: 5, title: 'сделать домашку' },\r\n        { id: 6, title: 'погулять с собакой' },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst Board = () => {\r\n  const { title, lists } = data;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <p></p>\r\n        <a href=\"/React-Trello\">\r\n          <GoArrowLeft className=\"arrow-back\"></GoArrowLeft>HOME\r\n        </a>\r\n      </div>\r\n      <div className=\"board\">\r\n        <h2 className=\"board__title\">{title}</h2>\r\n        <div className=\"board__list\">\r\n          {lists.map((list) => (\r\n            <List key={list.id} title={list.title} cards={list.cards} />\r\n          ))}\r\n        </div>\r\n        <button className=\"btn list__btn--add\">Add new list</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <h1>Error Page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home/Home';\r\nimport Board from './pages/Board/Board';\r\nimport Error from './pages/Error/Error';\r\n\r\nfunction Rroat() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/React-Trello\">\r\n          <Home />\r\n        </Route>\r\n\r\n        <Route path=\"/board\">\r\n          <Board />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default Rroat;\r\n","import React from 'react';\nimport Rroat from './Rroat';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Rroat />\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}