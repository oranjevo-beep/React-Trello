{"version":3,"sources":["pages/Board/components/List/List.tsx","pages/Board/Board.tsx","pages/Home/Home.tsx","pages/Error/Error.tsx","Rroat.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","props","title","cards","className","map","card","id","Board","state","lists","this","list","React","Component","Home","href","Error","Rroat","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAOe,SAASA,EAAKC,GAC3B,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACf,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BF,IAC7B,4BACGC,EAAME,KAAI,SAACC,GAAD,OACT,qBAAmBF,UAAU,OAA7B,SACE,oBAAIA,UAAU,aAAd,SAA4BE,EAAKJ,SADzBI,EAAKC,SAKnB,wBAAQH,UAAU,qBAAlB,6B,UCfeI,E,4MACnBC,MAAQ,CACNP,MAAO,qGACPQ,MAAO,CACL,CACEH,GAAI,EACJL,MAAO,iCACPC,MAAO,CACL,CAAEI,GAAI,EAAGL,MAAO,iEAChB,CAAEK,GAAI,EAAGL,MAAO,yFAChB,CAAEK,GAAI,EAAGL,MAAO,kGAGpB,CACEK,GAAI,EACJL,MAAO,0DACPC,MAAO,CAAC,CAAEI,GAAI,EAAGL,MAAO,uGAE1B,CACEK,GAAI,EACJL,MAAO,6CACPC,MAAO,CACL,CAAEI,GAAI,EAAGL,MAAO,yFAChB,CAAEK,GAAI,EAAGL,MAAO,0G,4CAMxB,WACE,MAAyBS,KAAKF,MAAtBP,EAAR,EAAQA,MAAOQ,EAAf,EAAeA,MAEf,OACE,sBAAKN,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BF,IAC9B,qBAAKE,UAAU,cAAf,SACGM,EAAML,KAAI,SAACO,GAAD,OACT,cAACZ,EAAD,CAAoBE,MAAOU,EAAKV,MAAOC,MAAOS,EAAKT,OAAxCS,EAAKL,SAGpB,wBAAQH,UAAU,qBAAlB,iC,GAxC2BS,IAAMC,WCU1BC,EAXF,WACX,OACE,qCACE,qBAAKX,UAAU,OAAf,SACE,mBAAGY,KAAK,IAAR,oBAEF,cAAC,EAAD,QCCSC,EARD,WACZ,OACE,8BACE,+CCoBSC,MAnBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,MCNKC,MARf,WACE,OACE,sBAAMjB,UAAU,YAAhB,SACE,cAAC,EAAD,OCMSkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74e019c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ICard } from '../../../../common/interfaces/ICard';\r\n\r\ninterface ListProps {\r\n  title: string;\r\n  cards: ICard[];\r\n}\r\nexport default function List(props: ListProps) {\r\n  const { title, cards } = props;\r\n  return (\r\n    <div className=\"list\">\r\n      <h2 className=\"list__title\">{title}</h2>\r\n      <p>\r\n        {cards.map((card) => (\r\n          <div key={card.id} className=\"card\">\r\n            <li className=\"card__item\">{card.title}</li>\r\n          </div>\r\n        ))}\r\n      </p>\r\n      <button className=\"btn card__btn--add\">Add new card</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport List from './components/List/List';\r\nimport './Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  state = {\r\n    title: 'Моя тестовая доска',\r\n    lists: [\r\n      {\r\n        id: 1,\r\n        title: 'Планы',\r\n        cards: [\r\n          { id: 1, title: 'помыть кота' },\r\n          { id: 2, title: 'приготовить суп' },\r\n          { id: 3, title: 'сходить в магазин' },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'В процессе',\r\n        cards: [{ id: 4, title: 'посмотреть сериал' }],\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Сделано',\r\n        cards: [\r\n          { id: 5, title: 'сделать домашку' },\r\n          { id: 6, title: 'погулять с собакой' },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { title, lists } = this.state;\r\n\r\n    return (\r\n      <div className=\"board\">\r\n        <h2 className=\"board__title\">{title}</h2>\r\n        <div className=\"board__list\">\r\n          {lists.map((list) => (\r\n            <List key={list.id} title={list.title} cards={list.cards} />\r\n          ))}\r\n        </div>\r\n        <button className=\"btn list__btn--add\">Add new list</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Board from '../Board/Board';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <a href=\"/\">HOME</a>\r\n      </div>\r\n      <Board />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <h1>Error Page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './pages/Home/Home';\r\nimport Board from './pages/Board/Board';\r\nimport Error from './pages/Error/Error';\r\n\r\nfunction Rroat() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n        <Route path=\"/board\">\r\n          <Board />\r\n        </Route>\r\n\r\n        <Route path=\"*\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default Rroat;\r\n","import React from 'react';\nimport Rroat from './Rroat';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Rroat />\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}